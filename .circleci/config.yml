aliases:
  - &restore-yarn-cache
      name: Restore Yarn package cache
      keys:
        - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
        - yarn-packages-{{ .Branch }}
        - yarn-packages-master
        - yarn-packages-

  - &save-yarn-cache
      name: Save Yarn package cache
      key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      paths:
        - node_modules

  - &install-yarn-dependencies
      name: Install dependencies
      command: yarn install

  - &filter-only-master
      branches:
        only: master

  - &filter-ignore-gh-pages
      branches:
        ignore: gh-pages

defaults: &defaults
  working_directory: ~/warriorjs
  docker:
    - image: circleci/node:8

version: 2
jobs:
  build:
    <<: *defaults

    steps:
      - checkout

      - restore_cache: *restore-yarn-cache

      - run: *install-yarn-dependencies

      - save_cache: *save-yarn-cache

      - run:
          name: Build and link cross-dependencies
          command: yarn build && yarn bootstrap

      - run:
          name: Run tests
          command: yarn test:coverage

      - run:
          name: Report coverage
          command: bash <(curl -s https://codecov.io/bash)

      - run:
          name: Build website
          command: cd website && yarn build

  deploy-website:
    <<: *defaults

    steps:
      - checkout

      - restore_cache: *restore-yarn-cache

      - run: *install-yarn-dependencies

      - save_cache: *save-yarn-cache

      - run:
          name: Install Crowdin
          command: |
            sudo apt-get update && sudo apt-get install default-jre rsync
            wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
            sudo dpkg -i crowdin.deb

      - run:
          name: Sync translation files
          command: cd website && yarn write-translations && yarn crowdin-upload && yarn crowdin-download && cd ..

      - run:
          name: Configure GitHub machine user
          command: |
            git config --global user.email "warriorjs-bot@users.noreply.github.com"
            git config --global user.name "WarriorJS Bot"
            echo "machine github.com login warriorjs-bot password $GITHUB_TOKEN" > ~/.netrc

      - run:
          name: Deploy website to GitHub Pages
          command: cd website && GIT_USER=warriorjs-bot yarn publish-gh-pages && cd ..

workflows:
  version: 2

  build-deploy:
    jobs:
      - build:
          filters: *filter-ignore-gh-pages

      - deploy-website:
          requires:
            - build
          filters: *filter-only-master
