aliases:
  - &restore-yarn-cache
    name: Restore Yarn package cache
    keys:
      - yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - yarn-packages-{{ .Branch }}
      - yarn-packages-master
      - yarn-packages-

  - &save-yarn-cache
    name: Save Yarn package cache
    key: yarn-packages-{{ .Branch }}-{{ checksum "yarn.lock" }}
    paths:
      - node_modules

  - &install-yarn-dependencies
    name: Install dependencies
    command: yarn install

  - &build-cross-dependencies
    name: Build cross-dependencies
    command: yarn build

  - &link-cross-dependencies
    name: Link cross-dependencies
    command: yarn bootstrap

  - &filter-only-master
    branches:
      only: master

  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages

defaults: &defaults
  working_directory: ~/warriorjs

version: 2
jobs:
  test-node-8:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn-dependencies
      - save_cache: *save-yarn-cache
      - run: *build-cross-dependencies
      - run: *link-cross-dependencies
      - run:
          name: Run tests
          command: yarn test:coverage
      - run:
          name: Report coverage
          command: bash <(curl -s https://codecov.io/bash)

  test-node-10:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn-dependencies
      - save_cache: *save-yarn-cache
      - run: *build-cross-dependencies
      - run: *link-cross-dependencies
      - run:
          name: Run tests
          command: yarn test

  build-and-deploy-website:
    <<: *defaults
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - restore_cache: *restore-yarn-cache
      - run: *install-yarn-dependencies
      - save_cache: *save-yarn-cache
      - run:
          name: Build website
          command: cd website && yarn build && cd ..
      - run:
          name: Install Crowdin
          command: |
            sudo apt-get update && sudo apt-get install default-jre rsync
            wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
            sudo dpkg -i crowdin.deb
      - run:
          name: Write translations
          command: cd website && yarn write-translations && cd ..
      - run:
          name: Sync translation files
          command:
            cd website && yarn crowdin-upload && yarn crowdin-download && cd ..
      - run:
          name: Configure GitHub machine user
          command: |
            git config --global user.email "warriorjs-bot@users.noreply.github.com"
            git config --global user.name "WarriorJS Bot"
            echo "machine github.com login warriorjs-bot password $GITHUB_TOKEN" > ~/.netrc
      - run:
          name: Deploy website to GitHub Pages
          command:
            cd website && GIT_USER=warriorjs-bot yarn publish-gh-pages && cd ..

workflows:
  version: 2

  build-and-deploy:
    jobs:
      - test-node-8:
          filters: *filter-ignore-gh-pages
      - test-node-10:
          filters: *filter-ignore-gh-pages
      - build-and-deploy-website:
          filters: *filter-only-master
